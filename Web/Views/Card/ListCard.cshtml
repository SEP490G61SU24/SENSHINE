@model IEnumerable<Web.Models.CardViewModel>

@{
    ViewData["Title"] = "card management";
}

<form method="get" asp-action="ListCard">
    <label for="searchInput">Search:</label>
    <input type="text" id="searchInput" name="searchInput" />
    <button type="submit">Search</button>
</form>

<form method="get" asp-action="ListCard">
    <div class="filter-container">
        <label for="sort">Sort By Date:</label>

        <label for="dateFrom">From:</label>
        <input type="date" id="dateFrom" name="dateFrom">

        <label for="dateTo">To:</label>
        <input type="date" id="dateTo" name="dateTo">

        <button type="submit">Sort & Filter</button>
    </div>
</form>

<p>
    <a href="CreateCard">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CardNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CustomerId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ComboId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreateDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TotalPrice)
            </th>
            <th></th>
        </tr>
    </thead>
    @if (Model != null)
    {
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.CardNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CustomerId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ComboId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreateDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TotalPrice)
                    </td>
                    <td>
                        @Html.ActionLink("Update", "UpdateCard", new { id = item.Id }, new { @href = "http://localhost:5129/Card/UpdateCard?id=" + item.Id }) |
                        @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                        @Html.ActionLink("Change State", "ChangeStateCard", new { id = item.Id }, new { @onclick = "return confirmChangeState(" + item.Id + ")" })

                    </td>
                </tr>
            }
        </tbody>
    }
    else
    {
        <p>No cards found matching your search criteria.</p>
    }
</table>

<script>
    function confirmChangeState(id) {
        if (confirm("Are you sure you want to change the state of this card?")) {
            // Submit the form using the original ActionLink (no further action needed)
            return true;
        } else {
            // User canceled, prevent default action (optional)
            return false;
        }
    }
</script>
