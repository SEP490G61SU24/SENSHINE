@model IEnumerable<Web.Models.PromotionViewModel>

@{
    ViewData["Title"] = "Danh sách khuyến mãi";
    ViewData["ActionName"] = "Thêm khuyến mãi";
    ViewData["ActionUrl"] = "/promotions/add";
    var promotionsJson = System.Text.Json.JsonSerializer.Serialize(Model);
}

@{
    var distinctSpaNames = Model.Select(promotion => promotion.SpaName).Distinct();
}

@section Styles {
    <link rel="stylesheet" type="text/css" href="~/assets/css/font-awesome.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/vendors/icofont.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/vendors/themify.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/vendors/flag-icon.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/vendors/feather-icon.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/vendors/slick.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/vendors/slick-theme.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/vendors/scrollbar.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/vendors/animate.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/vendors/datatables.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/vendors/sweetalert2.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/vendors/bootstrap.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/style.css">
    <link id="color" rel="stylesheet" href="~/assets/css/color-1.css" media="screen">
    <link rel="stylesheet" type="text/css" href="~/assets/css/responsive.css">
}

<div class="card">
    <div class="card-body">
        <div class="list-promotion-header">
            <div>
                <div class="light-box">
                    <a data-bs-toggle="collapse" href="#collapsePromotion" role="button" aria-expanded="false" aria-controls="collapsePromotion">
                        <i class="filter-icon show" data-feather="filter"></i><i class="icon-close filter-close hide"></i>
                    </a>
                </div>
            </div>
            <div class="collapse" id="collapsePromotion">
                <div class="card card-body list-promotion-body">
                    <div class="row row-cols-xl-5 row-cols-lg-4 row-cols-md-3 row-cols-sm-2 row-cols-2 g-3 mt-3">
                        <div class="col">
                            <label for="spaLocation" class="form-label">Select Spa Location</label>
                            <select id="spaLocation" class="form-select" aria-label="Select Spa Location" onchange="fetchPromotionsByFilter()">
                                <option selected disabled> All Location </option>
                                @foreach (var spaName in distinctSpaNames)
                                {
                                    <option value="@spaName">@spaName</option>
                                }
                            </select>
                        </div>
                        <div class="col">
                            <label for="startDate" class="form-label">Start Date</label>
                            <input type="date" id="startDate" class="form-control" aria-label="Start Date" onchange="fetchPromotionsByFilter()">
                        </div>
                        <div class="col">
                            <label for="endDate" class="form-label">End Date</label>
                            <input type="date" id="endDate" class="form-control" aria-label="End Date" onchange="fetchPromotionsByFilter()">
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="table-responsive custom-scrollbar">
            <table class="display" id="promotions-table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Promotion Name</th>
                        <th>Spa Name</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Discount (%)</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.Id</td>
                            <td>@item.PromotionName</td>
                            <td>@item.SpaName</td>
                            <td>@item.StartDate</td>
                            <td>@item.EndDate</td>
                            <td>@(item.DiscountPercentage.ToString().TrimEnd('0').TrimEnd('.'))</td>

                            <td>
                                <ul class="action">
                                    <li class="edit"><a href="@Url.Action("Edit", "Promotions", new { id = item.Id })"><i class="icon-pencil-alt"></i></a></li>
                                    
                                    <li class="delete"><a href="#" onclick="confirmDelete(@item.Id)"><i class="icon-trash"></i></a></li>
                                </ul>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/assets/js/jquery.min.js"></script>
    <script src="~/assets/js/bootstrap/bootstrap.bundle.min.js"></script>
    <script src="~/assets/js/icons/feather-icon/feather.min.js"></script>
    <script src="~/assets/js/icons/feather-icon/feather-icon.js"></script>
    <script src="~/assets/js/scrollbar/simplebar.js"></script>
    <script src="~/assets/js/scrollbar/custom.js"></script>
    <script src="~/assets/js/config.js"></script>
    <script src="~/assets/js/sidebar-menu.js"></script>
    <script src="~/assets/js/sidebar-pin.js"></script>
    <script src="~/assets/js/slick/slick.min.js"></script>
    <script src="~/assets/js/slick/slick.js"></script>
    <script src="~/assets/js/header-slick.js"></script>
    <script src="~/assets/js/datatable/datatables/jquery.dataTables.min.js"></script>
    <script src="~/assets/js/datatable/datatables/datatable.custom.js"></script>
    <script src="~/assets/js/script.js"></script>
    <script src="~/assets/js/sweet-alert/sweetalert.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('#promotions-table').DataTable({
                columns: [
                    { data: 'id' }, // Assuming the ID is named 'id'
                    { data: 'promotionName' }, // Promotion name field
                    { data: 'spaName' }, // Spa name field
                    {
                        data: 'startDate', // Start date field
                        render: function (data) {
                            // Convert the date string to a Date object
                            var date = new Date(data);

                            // Check if the date is valid
                            if (isNaN(date.getTime())) {
                                return data; // Return the raw data if invalid date
                            }

                            // Format the date as dd/MM/yyyy
                            var day = ('0' + date.getDate()).slice(-2);
                            var month = ('0' + (date.getMonth() + 1)).slice(-2);
                            var year = date.getFullYear();

                            return `${day}-${month}-${year}`;
                        }
                    },
                    {
                        data: 'endDate', // End date field
                        render: function (data) {
                            // Convert the date string to a Date object
                            var date = new Date(data);

                            // Check if the date is valid
                            if (isNaN(date.getTime())) {
                                return data; // Return the raw data if invalid date
                            }

                            // Format the date as dd/MM/yyyy
                            var day = ('0' + date.getDate()).slice(-2);
                            var month = ('0' + (date.getMonth() + 1)).slice(-2);
                            var year = date.getFullYear();

                            return `${day}-${month}-${year}`;
                        }
                    },
                    { data: 'discountPercentage' }, // Discount percentage field
                    {
                        data: null, // Use null as there is no `actions` field in the response
                        render: function (data, type, row) {
                            return `
                            <ul class="action">
                                <li class="edit"><a href="/promotions/edit/${row.id}"><i class="icon-pencil-alt"></i></a></li>
                               
                                <li class="delete"><a href="#" onclick="confirmDelete(${row.id})"><i class="icon-trash"></i></a></li>
                            </ul>
                        `;
                        }
                    }
                ]
            });


            $('#spaLocation, #startDate, #endDate').on('change', fetchPromotionsByFilter);
        });

        function confirmDelete(id) {
            swal({
                title: 'Bạn có chắc chắn muốn xóa?',
                text: "Dữ liệu sẽ bị mất khi xác nhận!",
                icon: 'warning',
                buttons: {
                    cancel: {
                        text: 'Không, hủy bỏ!',
                        value: null,
                        visible: true,
                        className: 'btn btn-secondary',
                        closeModal: true
                    },
                    confirm: {
                        text: 'Xác nhận!',
                        value: true,
                        visible: true,
                        className: 'btn btn-success',
                        closeModal: true
                    }
                }
            }).then((result) => {
                if (result) {
                    $.ajax({
                        url: '/api/DeletePromotion/' + id,
                        type: 'DELETE',
                        success: function (response) {
                            swal("Đã xóa!", "Khuyến mãi đã xóa thành công.", "success")
                                .then(() => {
                                    location.reload();
                                });
                        },
                        error: function (xhr, status, error) {
                            swal("Lỗi!", "Khuyến mãi xóa thất bại.", "error");
                        }
                    });
                } else {
                    swal("Đã hủy", "Dữ liệu của bạn không thay đổi.", "info");
                }
            });
        }

        function fetchPromotionsByFilter() {
            var spaLocation = $('#spaLocation').val();
            var startDate = $('#startDate').val();
            var endDate = $('#endDate').val();

            $.ajax({
                url: 'http://localhost:5297/api/GetPromotionsByFilter',
                type: 'GET',
                data: {
                    spaLocation: spaLocation || '', // Use empty string if spaLocation is not set
                    startDate: startDate || '', // Use empty string if startDate is not set
                    endDate: endDate || '' // Use empty string if endDate is not set
                },
                success: function (data) {
                    var table = $('#promotions-table').DataTable();
                    table.clear();
                    table.rows.add(data); // Ensure the data matches the expected DataTable format
                    table.draw();
                },
                error: function (xhr, status, error) {
                    console.error("Error fetching promotions:", error);
                    swal("Error!", "Failed to fetch promotions.", "error");
                }
            });
        }

    </script>
}
