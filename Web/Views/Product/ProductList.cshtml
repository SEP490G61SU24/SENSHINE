@model API.Ultils.FilteredPaginatedList<Web.Models.ProductViewModel>
@{
    ViewData["Title"] = "Danh sách sản phẩm";
    ViewData["ActionName"] = "Thêm sản phẩm";
    ViewData["ActionUrl"] = "/product/add";
    var productsJson = System.Text.Json.JsonSerializer.Serialize(Model);
}
@{
    ViewBag.Title = "List Products";
    var categories = ViewBag.Categories as List<CategoryViewModel>;
}
@section Styles {
    <link rel="stylesheet" type="text/css" href="~/assets/css/font-awesome.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/vendors/icofont.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/vendors/themify.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/vendors/flag-icon.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/vendors/feather-icon.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/vendors/slick.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/vendors/slick-theme.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/vendors/scrollbar.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/vendors/animate.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/vendors/datatables.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/vendors/sweetalert2.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/vendors/bootstrap.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/style.css">
    <link id="color" rel="stylesheet" href="~/assets/css/color-1.css" media="screen">
    <link rel="stylesheet" type="text/css" href="~/assets/css/responsive.css">
}

<div class="card">
    <div class="card-body">
        <div class="table-responsive custom-scrollbar">
            <div class="search-page">
                <form class="theme-form mb-3" method="GET">
                    <div class="d-flex justify-content-between align-items-center">
                    <div class="dataTables_length" id="table_length">
                        <label>
                            Hiển thị
                            <select aria-controls="table" class="" asp-for="PageSize" name="PageSize" id="PageSize" onchange="this.form.submit()">
                                @foreach (var pSize in new List<(int Value, string Name)>
                                {
                                (Value: 5, Name: "5"),
                                (Value: 10, Name: "10"),
                                (Value: 25, Name: "25"),
                                (Value: 50, Name: "50"),
                                (Value: 100, Name: "100"),
                                })
                                {
                                    <option value="@pSize.Value" selected="@(pSize.Value == Model.PageSize ? "selected" : null)">@pSize.Name</option>
                                }
                            </select>
                            bản ghi
                        </label>
                        </div>
                            <!-- Filter Toggle Icon -->
                            <div>
                                <a data-bs-toggle="collapse" href="#collapseFilter" role="button" aria-expanded="false" aria-controls="collapseFilter">
                                    <i class="filter-icon" data-feather="filter"></i>
                                </a>
                            </div>
                        </div>
                        <!-- Collapsible Filter Section -->
                        <div class="collapse mt-3" id="collapseFilter">
                            <div class="card card-body">
                                <div class="row g-3">
                   
                        <div class="col">
                            <label for="categoryname" class="form-label">Select Category</label>
                            <select id="categoryname" name="categoryName" class="form-select" aria-label="Select Category" onchange="updateCategoryHiddenInput()">
                                <option selected disabled>All Category</option>
                                @if (categories != null)
                                {
                                    foreach (var category in categories)
                                    {
                                        <option value="@category.CategoryName">@category.CategoryName</option>
                                    }
                                }
                            </select>
                            <input type="hidden" id="hiddenCategoryName"  value="@Model.CategoryName" />
                        </div>
                        <div class="col">
                            <label for="quantityRange" class="form-label">Quantity Range</label>
                            <select id="quantityRange" name="quantityRange" class="form-select" aria-label="Select Quantity Range" onchange="updateQuantityHiddenInput()">
                                <option value="" selected disabled>Select Quantity Range</option>
                                <option value="0-10">&lt;10</option>
                                <option value="0-100">&lt;100</option>
                                <option value="0-500">&lt;500</option>
                                <option value="0-1000">&lt;1000</option>
                                <option value="1000-9999">&gt; 1000</option>
                                <option value="0-99999">All</option>
                            </select>
                            <input type="hidden" id="hiddenQuantityRange" value="@Model.QuantityRange"/>
                        </div>
                        <div class="col">
                            <label for="priceRange" class="form-label">Price Range</label>
                            <select id="priceRange" name="priceRange" class="form-select" aria-label="Select Price Range" onchange="updatePriceHiddenInput()">
                                <option value="" selected disabled>Select Price Range</option>
                                <option value="0-100">&lt;100</option>
                                <option value="0-500">&lt;500</option>
                                <option value="0-1000">&lt;1000</option>
                                <option value="1000-9999">&gt; 1000</option>
                                <option value="0-99999">All</option>
                            </select>
                            <input type="hidden" id="hiddenPriceRange"  value="@Model.PriceRange" />
                        </div>
                    </div>
                                </div>
                            </div>
                    <div class="input-group m-0 flex-nowrap">
                        <input class="form-control-plaintext" name="searchTerm" type="search" value="@(Model.SearchTerm ?? null)" placeholder="Nhập tên, số điện thoại ..."><button class="btn btn-primary input-group-text">Tìm kiếm</button>
                    </div>
                </form>
            </div>
            <table class="display" id="products-table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Hình ảnh</th>
                        <th>Tên sản phẩm</th>
                        <th>Thể loại</th>
                        <th>Giá</th>
                        <th>Số lượng</th>
                        <th>Hành động</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td>@item.Id</td>
                            <td>
                                <img src="@Url.Content(item.ProductImages.Select(x => x.ImageUrl).FirstOrDefault() ?? "~/assets/images/Logo Senshine.png")" alt="Cover Image" style="width: 130px; height: 100px;" />
                            </td>
                            <td>@item.ProductName</td>
                            <td>
                                @string.Join(", ", item.Categories.Select(c => c.CategoryName))
                            </td>
                            <td>@String.Format("{0:0,0} VND", @item.Price)</td>
                            <td>@item.Quantity</td>
                            <td>
                                <ul class="action">
                                    <li class="edit"><a href="@Url.Action("Edit", "Product", new { id = item.Id })"><i class="icon-pencil-alt"></i></a></li>
                                    
                                    <li class="delete"><a href="#" onclick="confirmDelete(@item.Id)"><i class="icon-trash"></i></a></li>
                                </ul>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="dataTables_wrapper no-footer">
                <div class="dataTables_paginate paging_simple_numbers" id="table_paginate">
                    <a class="paginate_button previous @(Model.HasPreviousPage ? "" : "disabled")"
                       aria-controls="table"
                       href="@(Model.HasPreviousPage ? $"?searchTerm={Model.SearchTerm}&pageIndex={Model.PageIndex - 1}&pageSize={Model.PageSize}" : "javascript:void(0);")"
                       id="table_previous">« Trước</a>

                    <span>
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <a class="@(i == Model.PageIndex ? "paginate_button current" : "paginate_button")"
                               aria-controls="table"
                               href="?searchTerm=@Model.SearchTerm&pageIndex=@i&pageSize=@Model.PageSize"
                               data-dt-idx="@i">@i</a>
                        }
                    </span>

                    <a class="paginate_button next @(Model.HasNextPage ? "" : "disabled")"
                       aria-controls="table"
                       href="@(Model.HasNextPage ? $"?searchTerm={Model.SearchTerm}&pageIndex={Model.PageIndex + 1}&pageSize={Model.PageSize}" : "javascript:void(0);")"
                       id="table_next">Tiếp »</a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/assets/js/jquery.min.js"></script>
    <script src="~/assets/js/bootstrap/bootstrap.bundle.min.js"></script>
    <script src="~/assets/js/icons/feather-icon/feather.min.js"></script>
    <script src="~/assets/js/icons/feather-icon/feather-icon.js"></script>
    <script src="~/assets/js/scrollbar/simplebar.js"></script>
    <script src="~/assets/js/scrollbar/custom.js"></script>
    <script src="~/assets/js/config.js"></script>
    <script src="~/assets/js/sidebar-menu.js"></script>
    <script src="~/assets/js/sidebar-pin.js"></script>
    <script src="~/assets/js/slick/slick.min.js"></script>
    <script src="~/assets/js/slick/slick.js"></script>
    <script src="~/assets/js/header-slick.js"></script>
    <script src="~/assets/js/datatable/datatables/jquery.dataTables.min.js"></script>
    <script src="~/assets/js/datatable/datatables/datatable.custom.js"></script>
    <script src="~/assets/js/script.js"></script>
    <script src="~/assets/js/sweet-alert/sweetalert.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('#products-table').DataTable({
                paging: false,
                searching: false,
               
            });
        });
        


        function confirmDelete(id) {
            swal({
                title: 'Bạn có chắc chắn muốn xóa?',
                text: "Dữ liệu sẽ bị mất khi xác nhận!",
                icon: 'warning',
                buttons: {
                    cancel: {
                        text: 'Không, hủy bỏ!',
                        value: null,
                        visible: true,
                        className: 'btn btn-secondary',
                        closeModal: true
                    },
                    confirm: {
                        text: 'Xác nhận!',
                        value: true,
                        visible: true,
                        className: 'btn btn-success',
                        closeModal: true
                    }
                }
            }).then((result) => {
                if (result) {
                    $.ajax({
                        url: 'http://localhost:5297/api/DeleteProduct/' + id,
                        type: 'DELETE',
                        success: function (response) {
                            swal("Đã xóa!", "Sản phẩm đã xóa thành công.", "success")
                                .then(() => {
                                    location.reload();
                                });
                        },
                        error: function (xhr, status, error) {
                            swal("Lỗi!", "Sản phẩm xóa thất bại.", "error");
                        }
                    });
                } else {
                    swal("Đã hủy", "Dữ liệu của bạn không thay đổi.", "info");
                }
            });
        }
        function updateHiddenInput() {
            var selectElement = document.getElementById('quantityRange');
            var hiddenInput = document.getElementById('hiddenQuantityRange');
            hiddenInput.value = selectElement.value;
        }
        function updatePriceHiddenInput() {
            var selectElement = document.getElementById('priceRange');
            var hiddenInput = document.getElementById('hiddenPriceRange');
            hiddenInput.value = selectElement.value;
        }
        function updateCategoryHiddenInput() {
            var selectElement = document.getElementById('categoryname');
            var hiddenInput = document.getElementById('hiddenCategoryName');
            hiddenInput.value = selectElement.value;
        }
    </script>
}
